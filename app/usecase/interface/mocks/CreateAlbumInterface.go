// Code generated by mockery v2.52.4. DO NOT EDIT.

package mocks

import (
	entity "boilerplate/app/domain/entity"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// CreateAlbumInterface is an autogenerated mock type for the CreateAlbumInterface type
type CreateAlbumInterface struct {
	mock.Mock
}

// CreateAlbum provides a mock function with given fields: ctx, album
func (_m *CreateAlbumInterface) CreateAlbum(ctx context.Context, album entity.Album) (string, error) {
	ret := _m.Called(ctx, album)

	if len(ret) == 0 {
		panic("no return value specified for CreateAlbum")
	}

	var r0 string
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, entity.Album) (string, error)); ok {
		return rf(ctx, album)
	}
	if rf, ok := ret.Get(0).(func(context.Context, entity.Album) string); ok {
		r0 = rf(ctx, album)
	} else {
		r0 = ret.Get(0).(string)
	}

	if rf, ok := ret.Get(1).(func(context.Context, entity.Album) error); ok {
		r1 = rf(ctx, album)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewCreateAlbumInterface creates a new instance of CreateAlbumInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCreateAlbumInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *CreateAlbumInterface {
	mock := &CreateAlbumInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
